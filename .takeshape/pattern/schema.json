{
  "apiVersion": "2",
  "dataKey": "",
  "projectId": "79b5254d-5bc3-4034-8b05-e9c2f097de5a",
  "version": 1,
  "created": "2021-06-08T13:12:26.923Z",
  "updated": "2021-08-26T14:57:20.967Z",
  "defaultLocale": "en-us",
  "locales": ["en-us"],
  "schemaVersion": "3.5.0",
  "queries": {
    "getMyProfile": {
      "shape": "Profile",
      "resolver": {
        "name": "takeshape:find",
        "service": "takeshape:local",
        "options": { "model": "Profile" },
        "argsMapping": { "where.id.eq": [["get", { "path": "claims.sub" }]] }
      },
      "description": "Get my Profile"
    },
    "getMySubscriptions": {
      "shape": { "type": "array", "items": { "@ref": "stripe:Subscription" } },
      "resolver": {
        "resultsMapping": [["get", { "path": "steps.subscriptions.data" }]],
        "compose": [
          {
            "if": "!isEmpty(claims.sub)",
            "id": "profile",
            "name": "takeshape:find",
            "service": "takeshape:local",
            "options": { "model": "Profile" },
            "argsMapping": { "where.id.eq": [["get", { "path": "claims.sub" }]] }
          },
          {
            "if": "!isEmpty(steps.profile.stripeCustomerId)",
            "id": "subscriptions",
            "name": "rest:get",
            "service": "stripe",
            "options": { "path": "/v1/subscriptions" },
            "searchParamsMapping": [
              ["expand[]", [["set", { "value": "data.items" }]]],
              ["expand[]", [["set", { "value": "data.plan.product" }]]],
              ["expand[]", [["set", { "value": "data.latest_invoice.payment_intent" }]]],
              ["customer", [["get", { "path": "steps.profile.stripeCustomerId" }]]]
            ]
          }
        ]
      },
      "description": "Get my subscriptions"
    },
    "getStripeProducts": {
      "shape": { "type": "array", "items": { "@ref": "takeshape:local:StripeProductWithPrices" } },
      "resolver": {
        "resultsMapping": [
          [
            "expressionEval",
            {
              "expression": "map(compose(set('prices', placeholder, newObject()), get(placeholder, groupBy('product', steps.prices.data)), get('id')), steps.products.data)"
            }
          ],
          [
            "getMultiple",
            {
              "paths": ["previousStep", "steps.products.data"]
            }
          ],
          ["zipAndMerge", {}]
        ],
        "compose": [
          {
            "id": "products",
            "name": "rest:get",
            "service": "stripe",
            "options": { "path": "/v1/products" },
            "searchParamsMapping": [["active", [["set", { "value": "true" }]]]]
          },
          {
            "id": "prices",
            "name": "rest:get",
            "service": "stripe",
            "options": { "path": "/v1/prices" },
            "searchParamsMapping": [["active", [["set", { "value": "true" }]]]]
          }
        ]
      },
      "description": "Get Stripe products"
    },
    "getProfile": {
      "shape": "Profile",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "options": { "model": "Profile" }
      },
      "description": "Get a Profile by ID",
      "args": "TSGetArgs<Profile>"
    },
    "getProfileList": {
      "shape": "PaginatedList<Profile>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "options": { "model": "Profile" }
      },
      "description": "Returns a list Profile in natural order.",
      "args": "TSListArgs<Profile>"
    }
  },
  "mutations": {
    "upsertMyProfile": {
      "shape": "Profile",
      "resolver": {
        "resultsMapping": [
          ["get", { "path": "steps.createProfile.result" }],
          ["get", { "path": "steps.updateProfile.result" }]
        ],
        "compose": [
          {
            "if": "!isEmpty(claims.sub)",
            "id": "existingProfile",
            "argsMapping": { "where.id.eq": [["get", { "path": "claims.sub" }]] },
            "name": "takeshape:find",
            "service": "takeshape:local",
            "options": { "model": "Profile" }
          },
          {
            "if": "isEmpty(steps.existingProfile)",
            "id": "createProfile",
            "argsMapping": {
              "input.id": [["get", { "path": "claims.sub" }]],
              "input.email": [["get", { "path": "claims.email" }]],
              "input.firstName": [["get", { "path": "args.firstName" }]],
              "input.lastName": [["get", { "path": "args.lastName" }]],
              "input.bio": [["get", { "path": "args.bio" }]],
              "input.avatar.id": [["get", { "path": "args.avatarId" }]]
            },
            "name": "takeshape:create",
            "service": "takeshape:local",
            "options": { "model": "Profile" }
          },
          {
            "if": "!isEmpty(steps.existingProfile)",
            "id": "updateProfile",
            "argsMapping": {
              "input._id": [["get", { "path": "steps.existingProfile._id" }]],
              "input.email": [["get", { "path": "claims.email" }]],
              "input.firstName": [["get", { "path": "args.firstName" }]],
              "input.lastName": [["get", { "path": "args.lastName" }]],
              "input.bio": [["get", { "path": "args.bio" }]],
              "input.avatar.id": [["get", { "path": "args.avatarId" }]]
            },
            "name": "takeshape:update",
            "service": "takeshape:local",
            "options": { "model": "Profile" }
          }
        ]
      },
      "description": "Upsert My Profile",
      "args": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "bio": { "type": "string" },
          "avatarId": { "type": "string" }
        }
      }
    },
    "upsertMyCustomer": {
      "shape": "stripe:Customer",
      "resolver": {
        "resultsMapping": [["get", { "path": "steps.updatedCustomer" }]],
        "compose": [
          {
            "if": "!isEmpty(claims.sub)",
            "id": "existingProfile",
            "argsMapping": { "where.id.eq": [["get", { "path": "claims.sub" }]] },
            "name": "takeshape:find",
            "service": "takeshape:local",
            "options": { "model": "Profile" }
          },
          {
            "if": "!isEmpty(claims.sub) && !isEmpty(claims.email) && isEmpty(steps.existingProfile.stripeCustomerId)",
            "id": "existingCustomerByEmail",
            "name": "rest:get",
            "service": "stripe",
            "options": { "path": "/v1/customers" },
            "searchParamsMapping": [["email", [["get", { "path": "claims.email" }]]]]
          },
          {
            "if": "!isEmpty(claims.sub) && !isEmpty(claims.email) && !isEmpty(steps.existingProfile.stripeCustomerId)",
            "id": "existingCustomerById",
            "name": "rest:get",
            "service": "stripe",
            "options": { "path": "/v1/customers/{customer}" },
            "argsMapping": {
              "pathParams.customer": [["get", { "path": "steps.existingProfile.stripeCustomerId" }]]
            }
          },
          {
            "if": "!isEmpty(claims.sub) && !isEmpty(claims.email)",
            "id": "updatedCustomer",
            "argsMapping": {
              "form.email": [["get", { "path": "claims.email" }]],
              "form.name": [["get", { "path": "args.name" }]],
              "form.description": [["get", { "path": "args.description" }]],
              "pathParams.customer": [
                ["get", { "path": "steps.existingCustomerByEmail.data[0].id" }],
                ["get", { "path": "steps.existingCustomerById.id" }]
              ]
            },
            "name": "rest:post",
            "service": "stripe",
            "options": { "path": "/v1/customers/{customer}" }
          },
          {
            "if": "!isEmpty(claims.sub) && !isEmpty(steps.existingProfile) && isEmpty(steps.existingProfile.stripeCustomerId)",
            "id": "updatedProfile",
            "argsMapping": {
              "input._id": [["get", { "path": "steps.existingProfile._id" }]],
              "input.stripeCustomerId": [["get", { "path": "steps.updatedCustomer.id" }]]
            },
            "name": "takeshape:update",
            "service": "takeshape:local",
            "options": { "model": "Profile" }
          }
        ]
      },
      "description": "Upsert My Stripe Customer",
      "args": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" }
        }
      }
    },
    "deleteMySubscription": {
      "shape": "stripe:Subscription",
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty(claims.sub)",
            "id": "existingProfile",
            "argsMapping": { "where.id.eq": [["get", { "path": "claims.sub" }]] },
            "name": "takeshape:find",
            "service": "takeshape:local",
            "options": { "model": "Profile" }
          },
          {
            "if": "!isEmpty(claims.sub) && !isEmpty(steps.existingProfile.stripeCustomerId)",
            "id": "deleteSubscription",
            "name": "rest:delete",
            "service": "stripe",
            "options": { "path": "/v1/subscriptions/{subscriptionId}" },
            "argsMapping": {
              "form.invoice_now": [["set", { "value": "true" }]],
              "pathParams.subscriptionId": [["get", { "path": "args.subscriptionId" }]]
            }
          }
        ]
      },
      "description": "Delete a Stripe Subscription",
      "args": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string"
          }
        },
        "required": ["subscriptionId"]
      }
    },
    "createMyCheckoutSession": {
      "shape": "stripe:CheckoutSession",
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty(claims.sub)",
            "id": "existingProfile",
            "argsMapping": { "where.id.eq": [["get", { "path": "claims.sub" }]] },
            "name": "takeshape:find",
            "service": "takeshape:local",
            "options": { "model": "Profile" }
          },
          {
            "if": "!isEmpty(claims.sub) && !isEmpty(steps.existingProfile.stripeCustomerId)",
            "id": "createSubscription",
            "name": "rest:post",
            "service": "stripe",
            "options": { "path": "/v1/checkout/sessions" },
            "argsMapping": {
              "form": [
                [
                  "expressionEval",
                  {
                    "expression": "([['customer', steps.existingProfile.stripeCustomerId], ['line_items[0][price]', args.lineItems[0].price], ['line_items[0][quantity]', args.lineItems[0].quantity], ['payment_method_types[0]', 'card'], ['cancel_url', format('%s?stripe_checkout_session_id={CHECKOUT_SESSION_ID}&stripe_checkout_action=canceled', args.redirectUrl)], ['success_url', format('%s?stripe_checkout_session_id={CHECKOUT_SESSION_ID}&stripe_checkout_action=success', args.redirectUrl)], ['mode', 'subscription']])"
                  }
                ]
              ]
            }
          }
        ]
      },
      "description": "Create a Stripe Checkout Session",
      "args": {
        "type": "object",
        "properties": {
          "redirectUrl": {
            "type": "string"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price": { "type": "string" },
                "quantity": { "type": "integer" }
              }
            }
          }
        },
        "required": ["lineItems", "redirectUrl"]
      }
    },
    "updateProfile": {
      "shape": "UpdateResult<Profile>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "options": { "model": "Profile" }
      },
      "description": "Update Profile",
      "args": "UpdateArgs<Profile>"
    },
    "createProfile": {
      "shape": "CreateResult<Profile>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "options": { "model": "Profile" }
      },
      "description": "Create Profile",
      "args": "CreateArgs<Profile>"
    },
    "duplicateProfile": {
      "shape": "DuplicateResult<Profile>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "options": { "model": "Profile" }
      },
      "description": "Duplicate Profile",
      "args": "DuplicateArgs<Profile>"
    },
    "deleteProfile": {
      "shape": "DeleteResult<Profile>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "options": { "model": "Profile" }
      },
      "description": "Delete Profile",
      "args": "DeleteArgs<Profile>"
    }
  },
  "shapes": {
    "StripeProductWithPrices": {
      "id": "StripeProductWithPrices",
      "name": "StripeProductWithPrices",
      "title": "StripeProductWithPrices",
      "schema": {
        "allOf": [
          { "@ref": "stripe:Product" },
          {
            "type": "object",
            "properties": { "prices": { "type": "array", "items": { "@ref": "stripe:Price" } } }
          }
        ]
      }
    },
    "Stripe_Price": {
      "id": "Stripe_Price",
      "name": "Stripe_Price",
      "title": "Stripe_Price",
      "schema": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "active": { "type": "boolean" },
          "billing_scheme": { "type": "string" },
          "created": { "type": "number" },
          "livemode": { "type": "boolean" },
          "currency": { "type": "string" },
          "type": { "type": "string" },
          "unit_amount": { "type": "number" },
          "recurring": { "@ref": "stripe:Recurring" },
          "product": {
            "description": "The Stripe product associated with this subscription.",
            "title": "Stripe Product",
            "@ref": "stripe:Product",
            "@resolver": {
              "name": "rest:get",
              "service": "stripe",
              "options": { "path": "/v1/products/{product}" },
              "argsMapping": {
                "pathParams.product": [["get", { "path": "source.product" }]]
              }
            }
          }
        }
      }
    },
    "Profile": {
      "id": "K1WGTS1Yn",
      "name": "Profile",
      "title": "Profile",
      "workflow": "default",
      "model": { "type": "multiple" },
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "ID",
            "@mapping": "takeshape:local:Profile.zCUrxUP8h"
          },
          "firstName": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "First Name",
            "@mapping": "takeshape:local:Profile.-DrKuNqxZ"
          },
          "lastName": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Last Name",
            "@mapping": "takeshape:local:Profile.02oCExZgT"
          },
          "email": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Email",
            "@mapping": "takeshape:local:Profile.H8n0k9-ew"
          },
          "bio": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Bio",
            "@mapping": "takeshape:local:Profile.2nWp5by8j"
          },
          "avatar": {
            "description": "",
            "$ref": "#/shapes/TSRelationship/schema",
            "@relationship": { "shapeIds": ["ASSET"] },
            "title": "Avatar",
            "@mapping": "takeshape:local:Profile.k0Ha4O7oV"
          },
          "stripeCustomerId": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Stripe Customer ID",
            "@mapping": "takeshape:local:Profile.Z8JJPxO0B"
          },
          "stripeCustomer": {
            "title": "Stripe Customer",
            "description": "",
            "@ref": "stripe:Customer",
            "@resolver": {
              "name": "rest:get",
              "service": "stripe",
              "options": { "path": "/v1/customers/{customer}" },
              "argsMapping": {
                "pathParams.customer": [["get", { "path": "source.stripeCustomerId" }]]
              }
            }
          }
        }
      }
    }
  },
  "workflows": {},
  "forms": {
    "Profile": {
      "default": {
        "properties": {
          "id": { "widget": "singleLineText" },
          "firstName": { "widget": "singleLineText" },
          "lastName": { "widget": "singleLineText" },
          "email": { "widget": "singleLineText" },
          "bio": { "widget": "paragraphText" },
          "avatar": { "widget": "image" },
          "stripeCustomerId": { "widget": "singleLineText" }
        },
        "order": ["id", "firstName", "lastName", "email", "bio", "avatar", "stripeCustomerId"]
      }
    }
  },
  "services": {
    "auth-0": {
      "id": "auth-0",
      "provider": "auth0",
      "title": "Auth0",
      "serviceType": "authentication",
      "authenticationType": "none"
    },
    "stripe": {
      "id": "stripe",
      "provider": "stripe",
      "title": "Stripe",
      "namespace": "Stripe",
      "serviceType": "openapi",
      "authenticationType": "bearer",
      "authentication": "p9DgOOYDpr8i3/35NMZ7wgci2HQj0uQyQVugZ22+kqWUl1sIusqmpPzJCsrXTN6FxreMcWCn3BFTuHXv9epMjzQROnM8PNvAsih6PUkiuGHeHvoKiXfNyvjrvZwuXMxWuyVPrm/ONuKQclds2cNrBdyzMeLwi9T3iJhY+nWm6tJC5XfLiVMJ+rlFr9UoT4uWRceXI2bzz3TvfYSB8Abryr2V/g9G+5uCaSgsFrqVP67v8g==",
      "options": {
        "endpoint": "https://api.stripe.com/",
        "spec": "https://raw.githubusercontent.com/stripe/openapi/master/openapi/spec3.json"
      }
    }
  }
}
